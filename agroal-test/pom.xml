<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2017 Red Hat, Inc. and individual contributors as indicated by the @author tags -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.agroal</groupId>
        <artifactId>agroal-parent</artifactId>
        <version>2.3-SNAPSHOT</version>
    </parent>
    <artifactId>agroal-test</artifactId>
    <name>Agroal Test Suite</name>
    <repositories>
        <repository>
            <id>repository.spring.milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>io.agroal</groupId>
            <artifactId>agroal-api</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.agroal</groupId>
            <artifactId>agroal-hikari</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.agroal</groupId>
            <artifactId>agroal-pool</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.agroal</groupId>
            <artifactId>agroal-narayana</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.agroal</groupId>
            <artifactId>agroal-spring-boot-starter</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- JUnit -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${version.org.junit.platform}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.org.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.org.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <!-- OSGi -->
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-spi</artifactId>
            <version>${version.org.ops4j.pax.exam}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-native</artifactId>
            <version>${version.org.ops4j.pax.exam}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-link-assembly</artifactId>
            <version>${version.org.ops4j.pax.exam}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-aether</artifactId>
            <version>${version.org.ops4j.pax.url}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.framework</artifactId>
            <version>${version.org.apache.felix}</version>
            <scope>test</scope>
        </dependency>
        <!-- Narayana -->
        <dependency>
            <groupId>org.jboss.narayana.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <version>${version.org.jboss.narayana}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.jts</groupId>
            <artifactId>narayana-jts-integration</artifactId>
            <version>${version.org.jboss.narayana}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${version.org.jboss.logging}</version>
            <scope>test</scope>
        </dependency>
        <!-- SLF4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${version.org.slf4j}</version>
            <scope>test</scope>
        </dependency>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${version.org.springframework.boot}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${version.org.springframework.boot}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>dev.snowdrop</groupId>
            <artifactId>narayana-spring-boot-starter</artifactId>
            <version>${version.dev.snowdrop}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.com.h2database}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator-autoconfigure</artifactId>
            <version>${version.org.springframework.boot}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${version.io.micrometer}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>${version.io.micrometer}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.h-thurow</groupId>
            <artifactId>simple-jndi</artifactId>
            <version>${version.com.github.h-thurow}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
                <artifactId>serviceloader-maven-plugin</artifactId>
                <version>${version.eu.somatik.serviceloader-maven-plugin}</version>
                <configuration>
                    <services>
                        <param>org.junit.platform.launcher.LauncherInterceptor</param>>
                    </services>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.org.apache.maven.plugins.maven-surefire-plugin}</version>
                <configuration>
                    <groups>functional</groups>
                    <excludedGroups>transaction</excludedGroups>
                    <systemPropertyVariables>
                        <!-- Set JUL Formatting -->
                        <java.util.logging.config.file>src/test/resources/logging.properties</java.util.logging.config.file>
                        <java.util.logging.SimpleFormatter.format>[%4$s] %1$tT.%1$tL %5$s %6$s%n</java.util.logging.SimpleFormatter.format>
                        <!-- Enable LaunchInterceptor mechanism (implementations are loaded via ServiceLoader interface) -->
                        <!-- IDEs boostrap JUnit with class names and the interceptor is used to load each test class on an isolated classloader -->
                        <!-- Maven surefire loads the classes before starting JUnit and therefore need to fork execution -->
                        <junit.platform.launcher.interceptors.enabled>true</junit.platform.launcher.interceptors.enabled>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>transaction-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <groups>transaction</groups>
                            <excludedGroups>none</excludedGroups>
                            <!-- Run each test on this configuration on its own JVM fork -->
                            <reuseForks>false</reuseForks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spring-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <groups>spring</groups>
                            <excludedGroups>none</excludedGroups>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <version>${version.org.apache.servicemix.tooling}</version>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
